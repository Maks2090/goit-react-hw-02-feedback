{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","this","props","onLeaveFeedback","options","keyObject","Object","keys","className","css","list","map","nameButton","key","item","button","type","onClick","React","Component","Statistics","good","neutral","bad","total","positivePercentage","text","Section","title","children","Notification","message","App","state","increment","name","setState","prevState","countTotalFeedback","feedback","values","reduce","countPositiveFeedbackPercentage","goodFeedback","totalFeedback","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,gBCAzDD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,kC,mBCArGD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,6B,kKCgCVC,E,4JA3BX,WACI,MAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,QACnBC,EAAYC,OAAOC,KAAKH,GAE9B,OACI,mCACI,oBAAII,UAAWC,IAAIC,KAAnB,SACKL,EAAUM,KAAI,SAACC,EAAYC,GAAb,OACX,oBAAIL,UAAWC,IAAIK,KAAnB,SACI,wBAAQN,UAAWC,IAAIM,OACnBC,KAAK,SACLC,QAAS,kBAAMd,EAAgBS,IAFnC,SAIKA,KALqBC,c,GAVxBK,IAAMC,W,gBC+BrBC,E,4JA7BX,WACI,MAA0DnB,KAAKC,MAAvDmB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACI,mCACI,qBAAIjB,UAAWC,IAAIC,KAAnB,UAEI,6BAAI,oBAAGF,UAAWC,IAAIiB,KAAlB,mBAA+BL,OAEnC,6BAAI,oBAAGb,UAAWC,IAAIiB,KAAlB,sBAAkCJ,OAEtC,6BAAI,oBAAGd,UAAWC,IAAIiB,KAAlB,kBAA8BH,OAElC,6BAAI,oBAAGf,UAAWC,IAAIiB,KAAlB,oBAAgCF,OAEpC,6BAAI,oBAAGhB,UAAWC,IAAIiB,KAAlB,gCAA4CD,EAA5C,mB,GAjBCP,IAAMC,W,iBCehBQ,E,4JAbX,WAEI,MAA4B1B,KAAKC,MAAzB0B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,OACI,oCACI,oBAAIrB,UAAWC,IAAImB,MAAnB,SAA2BA,IAC1BC,S,GATKX,IAAMC,W,iBCIbW,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mBAAGvB,UAAWC,IAAIiB,KAAlB,SAAyBK,KCqFlBC,E,4MA9EbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,UAAY,SAACC,GACX,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,EAM9BG,mBAAqB,SAACC,GAMpB,OAJuBjC,OAAOkC,OAAOD,GACAE,QAAO,SAACjB,EAAOe,GAClD,OAAQf,EAASe,IAChB,I,EAKLG,gCAAkC,SAACH,GACjC,IAAMI,EAAeJ,EAASlB,KAExBuB,EADiBtC,OAAOkC,OAAOD,GACAE,QAAO,SAACjB,EAAOe,GAClD,OAAQf,EAASe,IAChB,GACH,OAAOM,KAAKC,MAAOH,EAAeC,EAAiB,M,4CAKrD,WAEE,OACE,qCAEE,cAAC,EAAD,CACEhB,MAAM,wBADR,SAGE,cAAE,EAAF,CACExB,QAASH,KAAKgC,MACd9B,gBAAiBF,KAAKiC,cAQ1B,cAAC,EAAD,CACEN,MAAM,aADR,SAG2C,IAAxC3B,KAAKqC,mBAAmBrC,KAAKgC,OAAgB,cAAC,EAAD,CAAcF,QAAQ,sBAClE,cAAC,EAAD,CACEV,KAAMpB,KAAKgC,MAAMZ,KACjBC,QAASrB,KAAKgC,MAAMX,QACpBC,IAAKtB,KAAKgC,MAAMV,IAChBC,MAAOvB,KAAKqC,mBAAmBrC,KAAKgC,OACpCR,mBAAoBxB,KAAKyC,gCACvBzC,KAAKgC,kB,GAlEHf,IAAMC,WCFxB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7f63b0d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3Y681\",\"text\":\"Statistics_text__1tyQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__23UvU\",\"item\":\"FeedbackOptions_item__7IDD5\",\"button\":\"FeedbackOptions_button__3w7tW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2VAAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__2buJm\"};","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport css from \"../FeedbackOptions/FeedbackOptions.module.css\";\r\n\r\nclass FeedbackOptions extends React.Component {\r\n\r\n    render() {\r\n        const { onLeaveFeedback, options } = this.props;\r\n        const keyObject = Object.keys(options);\r\n\r\n        return (\r\n            <>\r\n                <ul className={css.list}>\r\n                    {keyObject.map((nameButton, key) => (\r\n                        <li className={css.item} key={key}>\r\n                            <button className={css.button}\r\n                                type=\"button\"\r\n                                onClick={() => onLeaveFeedback(nameButton)}\r\n                            >\r\n                                {nameButton}\r\n                            </button>\r\n                        </li>\r\n                    ))\r\n                    }\r\n                </ul>\r\n\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default FeedbackOptions\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.shape({\r\n        good: PropTypes.number.isRequired,\r\n        neutral: PropTypes.number.isRequired,\r\n        bad: PropTypes.number.isRequired,\r\n    }),\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css'\r\n\r\nclass Statistics extends React.Component {\r\n\r\n    render() {\r\n        const { good, neutral, bad, total, positivePercentage } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <ul className={css.list} >\r\n\r\n                    <li><p className={css.text}>Good: {good}</p></li>\r\n\r\n                    <li><p className={css.text}>Neutral: {neutral}</p></li>\r\n\r\n                    <li><p className={css.text}>Bad: {bad}</p></li>\r\n\r\n                    <li><p className={css.text}>Total: {total}</p></li>\r\n\r\n                    <li><p className={css.text}>Positive feedback: {positivePercentage} %</p></li>\r\n\r\n                </ul>\r\n\r\n\r\n\r\n\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Statistics\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport css from './Section.module.css'\r\n\r\nclass Section extends React.Component {\r\n\r\n    render() {\r\n\r\n        const { title, children } = this.props\r\n\r\n        return (\r\n            <section>\r\n                <h2 className={css.title}>{title}</h2>\r\n                {children}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Section\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport css from './Notification.module.css'\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <p className={css.text}>{message}</p>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}","import React from \"react\";\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions'\nimport Statistics from './components/Statistics/Statistics'\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\nimport PropTypes from 'prop-types';\n\n\nclass App extends React.Component {\n\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  increment = (name) => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n\n    }))\n\n  };\n\n  countTotalFeedback = (feedback) => {\n\n    const valuesFeedback = Object.values(feedback)\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return totalFeedback;\n\n  }\n\n  countPositiveFeedbackPercentage = (feedback) => {\n    const goodFeedback = feedback.good;\n    const valuesFeedback = Object.values(feedback)\n    const totalFeedback = valuesFeedback.reduce((total, feedback) => {\n      return (total += feedback);\n    }, 0);\n    return Math.round((goodFeedback / totalFeedback) * 100);\n  }\n\n\n\n  render() {\n\n    return (\n      <>\n\n        <Section\n          title=\"Please leave feedback\"\n        >\n          < FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.increment}\n          />\n\n        </Section>\n\n\n\n\n        <Section\n          title=\"Statistics\"\n        >\n          {this.countTotalFeedback(this.state) === 0 ? (<Notification message=\"No feedback given\" />) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback(this.state)}\n              positivePercentage={this.countPositiveFeedbackPercentage(\n                this.state\n              )}\n            />\n          )}\n\n\n        </Section>\n\n      </>\n\n\n    )\n  }\n\n}\nexport default App;\n\nApp.propTypes = {\n  state: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }),\n  countTotalFeedback: PropTypes.func,\n  countPositiveFeedbackPercentage: PropTypes.func,\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}